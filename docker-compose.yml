version: '3'
services:

  logspout:
    image: gliderlabs/logspout
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    command: "syslog+tls://${PAPERTRAIL_URL}"
    restart: always

  nginx:
    build: ./nginx
    image: nginx:alpine
    volumes:
      - www:/var/www/html
    ports:
      - '80:80'
      - '443:443'
    restart: always
    
  redis:
    image: redis:alpine
    restart: always
  
  mysql:
    image: yobasystems/alpine-mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    
  wordpress:
    image: wordpress:fpm-alpine
    expose:
      - 9000
    depends_on:
      - mysql
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - www:/var/www/html
    restart: always

  wp:
    image: wordpress:cli
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - www:/var/www/html
    command: 'true'
  
#   certbot:
#     image: pierreprinetti/certbot
    
    

# docker run \
#   -v nginx-certs:/etc/letsencrypt \
#   -e http_proxy=$http_proxy \
#   -e domains="example.com,example.org" \
#   -e email="me@example.com" \
#   -p 80:80 \
#   -p 443:443 \
#   --rm pierreprinetti/certbot:latest

volumes:
  www:
  mysql:
