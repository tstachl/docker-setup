version: '3'
services:

  logspout:
    image: gliderlabs/logspout
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    command: "syslog+tls://${PAPERTRAIL_URL}"
    restart: always

  nginx:
    build: ./nginx
    image: nginx:alpine
    volumes:
      - www:/var/www/html
      - certs:/etc/letsencrypt
    ports:
      - '80:80'
      - '443:443'
    restart: always
  
  mysql:
    image: yobasystems/alpine-mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    
  wordpress:
    build: ./wordpress
    image: wordpress:fpm-alpine
    expose:
      - 9000
    depends_on:
      - mysql
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - www:/var/www/html
    restart: always

  wp:
    image: wordpress:cli
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - www:/var/www/html
    command: 'true'
  
  certbot:
    image: xataz/letsencrypt
    volumes:
      - certs:/etc/letsencrypt
  
  restic:
    restart: always
    image: jsmitsnl/docker-restic:latest
    volumes:
      - www:/data
    environment:
      - RESTIC_REPOSITORY=${RESTIC_REPOSITORY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - RESTIC_PASSWORD=${RESTIC_PASSWORD}

volumes:
  www:
  mysql:
  certs:
